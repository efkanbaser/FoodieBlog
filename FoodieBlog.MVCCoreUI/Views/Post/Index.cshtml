@using FoodieBlog.MVCCoreUI.Filters
@inject ISessionManager _session
@model PostIndexVm


<!-- Single Post Section Begin -->
<section class="single-post spad">
    <div class="single-post__hero set-bg" data-setbg="@Model.MainImage"></div>
    <div class="container">
        <div class="row d-flex justify-content-center">
            <div class="col-lg-8">
                <div class="single-post__title">
                    <div class="single-post__title__meta">
                        <h2>@Model.PublicationDay</h2>
                        <span>@Model.PublicationMonth</span>
                    </div>
                    <div class="single-post__title__text">
                        <ul class="label">
                            @{
                                if (Model.PostCategories.Any())
                                {
                                    foreach (var item in Model.PostCategories)
                                    {
                                        <li>@item.ToString()</li>
                                    }
                                }
                            }
                        </ul>
                        <h4>@Model.Title</h4>
                        <ul class="widget">
                            <li>by @Model.UserName</li>
                            <li>@Model.ReadingTime min read</li>
                            <li>20 Comment</li>
                        </ul>
                    </div>
                </div>
                @*                 <div class="single-post__social__item">
                    <ul>
                        <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                        <li><a href="#"><i class="fa fa-youtube-play"></i></a></li>
                    </ul>
                </div> *@
                <div class="single-post__top__text">
                    <p>
                        @Model.Contents
                    </p>
                </div>
                <div class="single-post__recipe__details">
                    <div class="single-post__recipe__details__option">
                        <ul>
                            <li>
                                <h5><i class="fa fa-user-o"></i> SERVES</h5>
                                <span>@Model.ServingSize</span>
                            </li>
                            <li>
                                <h5><i class="fa fa-clock-o"></i> PREP TIME</h5>
                                <span>@Model.PrepTime minute</span>
                            </li>
                            <li>
                                <h5><i class="fa fa-clock-o"></i> Cook TIME</h5>
                                <span>@Model.CookTime minute</span>
                            </li>
                            <li><a href="#" class="primary-btn"><i class="fa fa-print"></i> Read more</a></li> @* Make a RabbitMQ background service, create this pdf *@
                        </ul>
                    </div>
                    <div class="single-post__recipe__details__indegradients">
                        <h5>Ingredients</h5>
                        <ul>
                            @{
                                foreach (string ingredient in Model.Ingredients)
                                {
                                    <li>@ingredient</li>
                                }
                            }
                        </ul>
                    </div>
                    <div class="single-post__recipe__details__direction">
                        <h5>Directions</h5>
                        <ul>
                            @{
                                // Nothing was done for ordering, maybe add something to it
                                int number = 1;
                                foreach (string direction in Model.Directions)
                                {
                                    string numberText = number.ToString() + ".";
                                    <li><span>@numberText</span>@direction</li>
                                    number++;
                                }
                            }
                        </ul>
                    </div>
                </div>
                <div class="single-post__middle__text">
                    <p>
                        @Model.MiddleText
                    </p>
                </div>
                @{
                    if (!string.IsNullOrEmpty(Model.Quote))
                    {
                        <div class="single-post__quote">
                            <p>
                                @Model.Quote
                            </p>
                            <span>@Model.UserName</span>
                        </div>
                    }
                }

                <div class="single-post__desc">
                    <p>
                        @Model.DescriptionFirst
                    </p>
                    <h4>@Model.DescriptionHeader</h4>
                    <p>
                        @Model.DescriptionLast
                    </p>
                </div>
                <div class="single-post__more__details">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <img src="@Model.SecondaryImage" alt="">
                        </div>
                        <div class="col-lg-6 col-md-6">
                            <p>
                                @Model.MoreDetails
                            </p>
                        </div>
                    </div>
                </div>
                <div class="single-post__last__text">
                    <p>
                        @Model.LastText
                    </p>
                </div>
                <div class="single-post__tags">
                    @{
                        if (Model.PostTags.Any())
                        {
                            foreach (var item in Model.PostTags)
                            {
                                <a href="#">@item.ToString()</a>
                            }
                        }

                    }
                </div>
                <div class="single-post__next__previous">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <a href="/Home/Posts/@Model.PreviousPostUrl" class="single-post__previous">
                                <h6><span class="arrow_carrot-left"></span> Previous posts</h6>
                                <div class="single-post__previous__meta">
                                    <h4>@Model.PrevPublicationDay</h4>
                                    <span>@Model.PrevPublicationMonth</span>
                                </div>
                                <div class="single-post__previous__text">
                                    @* <span>Dinner</span> *@
                                    <h5>@Model.PrevTitle</h5>
                                </div>
                            </a>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <a href="/Home/Posts/@Model.NextPostUrl" class="single-post__next">
                                <h6>Next posts <span class="arrow_carrot-right"></span> </h6>
                                <div class="single-post__next__meta">
                                    <h4>@Model.NextPublicationDay</h4>
                                    <span>@Model.NextPublicationMonth</span>
                                </div>
                                <div class="single-post__next__text">
                                    @* <span>Smoothie</span> *@
                                    <h5>@Model.NextTitle</h5>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="single-post__author__profile">
                    <div class="single-post__author__profile__pic">
                        <img src="@Model.UserPic" alt="">
                    </div>
                    <div class="single-post__author__profile__text">
                        <h4>@{
                                @Model.UserName
                            }.</h4>
                        <p>
                            @Model.UserBio
                        </p>
                    </div>
                </div>
                <div class="single-post__comment">
                    <div class="widget__title">
                        <h4>@Model.Comments.Count.ToString() Comments</h4>
                    </div>
                    @{
                        foreach (var item in Model.Comments)
                        {
                            <div class="single-post__comment__item">
                                <div class="single-post__comment__item__pic">
                                    <img src="@item.ProfilePic" alt="">
                                </div>
                                <div class="single-post__comment__item__text">
                                    <h5>@item.UserName</h5>
                                    <span>@item.Date</span>
                                    <p>
                                        @item.Contents
                                    </p>
                                    <ul>
                                        <li><a href="#" class="heart-icon"><i class="fa fa-heart-o"></i></a></li>
                                    </ul>
                                </div>
                            </div>
                        }
                    }





                    @* reply *@
                    @*                     <div class="single-post__comment__item single-post__comment__item--reply">
                        <div class="single-post__comment__item__pic">
                            <img src="/frontassets/img/categories/single-post/comment/comment-2.jpg" alt="">
                        </div>
                        <div class="single-post__comment__item__text">
                            <h5>Brandon Kelley</h5>
                            <span>15 Aug 2017</span>
                            <p>
                                Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur,
                                adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore
                                magnam.
                            </p>
                            <ul>
                                <li><a href="#"><i class="fa fa-heart-o"></i></a></li>
                                <li><a href="#"><i class="fa fa-share-square-o"></i></a></li>
                            </ul>
                        </div>
                    </div> *@

                </div>
                @{
                    if(_session.ActiveUser != null){
                        <div class="single-post__leave__comment">
                            <div class="widget__title">
                                <h4>Leave a comment</h4>
                                <span class="commentFeedback"></span>
                            </div>
                            <form id="frmComment" asp-controller="Post" asp-action="Comment" method="post">
                                <input type="hidden" asp-for="Id" />
                                <textarea placeholder="Message" asp-for="CommentContent"></textarea>
                                <button type="submit" class="site-btn">Submit</button>
                            </form>                            
                        </div>
                    }
                }

            </div>
        </div>
    </div>
</section>
<!-- Single Post Section End -->
@section Scripts {

    <script>
        $(document).ready(function () {
            $('#frmComment').on('submit', function (e) {
                e.preventDefault(); 

                $.ajax({
                    url: "/Post/Comment",
                    method: 'POST',
                    data: $(this).serialize(),
                    dataType: 'json',
                    success: function (response) {
                         $('.commentFeedback').text(response.message);
                         $('.commentFeedback').addClass('alert');
                         $('.commentFeedback').addClass('alert-success');
                    },
                    error: function (xhr, status, error) {
                        $('.commentFeedback').text(error);
                    }
                });
            });

                   
            $('.heart-icon').on('click', function (e) {
                e.preventDefault(); // Prevent the link from navigating

                const icon = $(this).find('i');
                if (icon.hasClass('fa-heart-o')) {
                    // Change to filled heart
                    icon.removeClass('fa-heart-o').addClass('fa-heart');
                } else {
                    // Change back to empty heart
                    icon.removeClass('fa-heart').addClass('fa-heart-o');
                }
            });
       
        });
    </script>
}                